<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Mars Weather Map</title>
        <link rel="stylesheet" href="/css/styles.css" />
        <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-chart-matrix@1.1.1/dist/chartjs-chart-matrix.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.5.1/socket.io.js"></script>
    </head>
    <body class="bg-gray-100 transition-colors duration-300">
        <header class="bg-red-800 text-white p-4">
            <nav class="container mx-auto flex justify-between items-center">
                <ul class="flex space-x-4">
                    <li><a href="/" class="hover:text-gray-300">Home</a></li>
                    <li><a href="/explore" class="hover:text-gray-300">Explore</a></li>
                    <li><a href="/weather" class="hover:text-gray-300">Weather</a></li>
                </ul>
            </nav>
        </header>
        <main class="container mx-auto mt-8">
            <h1 class="text-3xl font-bold mb-4">Mars Weather Map</h1>
            <section id="weather-map" class="mb-8">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <h2 class="text-2xl font-bold mb-2">Temperature Map</h2>
                        <canvas id="temperature-map" class="w-full h-64 bg-white rounded shadow"></canvas>
                    </div>
                    <div>
                        <h2 class="text-2xl font-bold mb-2">Wind Map</h2>
                        <canvas id="wind-map" class="w-full h-64 bg-white rounded shadow"></canvas>
                    </div>
                </div>
            </section>
            <section id="weather-data" class="mb-8">
                <h2 class="text-2xl font-bold mb-2">Current Weather</h2>
                <div class="bg-white p-4 rounded shadow">
                    <p>Temperature: <span id="temperature" class="font-bold"></span>Â°C</p>
                    <p>Pressure: <span id="pressure" class="font-bold"></span> hPa</p>
                    <p>Wind Speed: <span id="wind-speed" class="font-bold"></span> m/s</p>
                </div>
            </section>
        </main>
        <footer class="bg-gray-800 text-white p-4 mt-8">
            <div class="container mx-auto text-center">
                <p>&copy; 2024 Mars Project Modernization</p>
            </div>
        </footer>
        <script>
            const socket = io();

            function updateWeatherData(data) {
                document.getElementById("temperature").textContent = data.temperature;
                document.getElementById("pressure").textContent = data.pressure;
                document.getElementById("wind-speed").textContent = data.windSpeed;
            }

            function createTemperatureMap(data) {
                const ctx = document.getElementById("temperature-map").getContext("2d");
                new Chart(ctx, {
                    type: "matrix",
                    data: {
                        datasets: [
                            {
                                label: "Temperature",
                                data: data.map((d, i) => ({ x: i % 8, y: Math.floor(i / 8), v: d })),
                                backgroundColor: (context) => {
                                    const value = context.dataset.data[context.dataIndex].v;
                                    const normalizedValue = (value + 30) / 60;
                                    const red = Math.round(255 * normalizedValue);
                                    const green = Math.round(255 * (1 - normalizedValue));
                                    return `rgb(${red}, ${green}, 0)`;
                                },
                                width: ({ chart }) => (chart.chartArea || {}).width / 8 - 1,
                                height: ({ chart }) => (chart.chartArea || {}).height / 8 - 1,
                            },
                        ],
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: { position: "top" },
                            title: { display: true, text: "Mars Temperature Map" },
                        },
                        scales: {
                            x: { type: "linear", position: "bottom", min: 0, max: 7 },
                            y: { type: "linear", min: 0, max: 7 },
                        },
                    },
                });
            }

            function createWindMap(data) {
                const ctx = document.getElementById("wind-map").getContext("2d");
                new Chart(ctx, {
                    type: "scatter",
                    data: {
                        datasets: [
                            {
                                label: "Wind",
                                data: data.map((d, i) => ({
                                    x: i % 8,
                                    y: Math.floor(i / 8),
                                    rotation: d.direction,
                                    speed: d.speed,
                                })),
                                pointStyle: "line",
                                rotation: (context) => context.raw.rotation,
                                backgroundColor: (context) => {
                                    const speed = context.raw.speed;
                                    const normalizedSpeed = speed / 10;
                                    const red = Math.round(255 * normalizedSpeed);
                                    const green = Math.round(255 * (1 - normalizedSpeed));
                                    return `rgb(${red}, ${green}, 0)`;
                                },
                                pointRadius: 5,
                            },
                        ],
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: { position: "top" },
                            title: { display: true, text: "Mars Wind Map" },
                        },
                        scales: {
                            x: { type: "linear", position: "bottom", min: 0, max: 7 },
                            y: { type: "linear", min: 0, max: 7 },
                        },
                    },
                });
            }

            function setupDynamicTheming() {
                const hour = new Date().getHours();
                const isDaytime = hour >= 6 && hour < 18;
                document.body.classList.toggle("bg-gray-900", !isDaytime);
                document.body.classList.toggle("text-white", !isDaytime);
            }

            function fetchWeatherData() {
                fetch("/api/weather-map")
                    .then((response) => response.json())
                    .then((data) => {
                        createTemperatureMap(data.temperatureMap);
                        createWindMap(data.windMap.map((value, index) => ({
                            speed: data.windMap[index * 2],
                            direction: data.windMap[index * 2 + 1]
                        })));
                    })
                    .catch((error) => console.error("Error fetching weather map data:", error));

                fetch("/api/weather")
                    .then((response) => response.json())
                    .then((data) => {
                        updateWeatherData(data);
                    })
                    .catch((error) => console.error("Error fetching weather data:", error));
            }

            socket.on("weatherUpdate", (data) => {
                updateWeatherData(data);
            });

            setupDynamicTheming();
            fetchWeatherData();
            setInterval(fetchWeatherData, 60000);
        </script>
    </body>
</html>